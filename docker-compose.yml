version: '3.8'

services:
  traefik:
    image: traefik:v2.4
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - web

  frontend:
    build:
      context: ./frontend
    labels:
      - "traefik.http.routers.frontend.rule=Host(`hng_devops.crabdance.com`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    networks:
      - web

  backend:
    build:
      context: ./backend
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydatabase
    labels:
      - "traefik.http.routers.backend.rule=Host(`hng_devops.crabdance.com`) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`))"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    networks:
      - web

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - web

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - web

networks:
  web:

volumes:
  postgres_data:

backend:
  build:
    context: ./backend
  environment:
    - POSTGRES_SERVER=${POSTGRES_SERVER}
    - POSTGRES_PORT=${POSTGRES_PORT}
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_DB=${POSTGRES_DB}
  labels:
    - "traefik.http.routers.backend.rule=Host(`hng_devops.crabdance.com`) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`))"
    - "traefik.http.services.backend.loadbalancer.server.port=8000"
  networks:
    - web
